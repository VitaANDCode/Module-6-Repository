var table = document.createElement('table');//инициализация таблицы //test
table.setAttribute('id','table');

for (let i = 0; i < 5; i++)//создание в таблице рядов и ячеек
{
    var tr = document.createElement("tr");
    for (let j = 0; j < 5; j++)
    {
        var td = document.createElement("td");
        td.className = "td";
        td.setAttribute("id", i*5+j);
        td.setAttribute('style', 'background-color: white');
        tr.appendChild(td);
    }
    table.appendChild(tr);
}

var tp = document.getElementById("tablePlace");
tp.appendChild(table);

var matrix = [];//создание матрицы для записи позиций (вкл или выкл (1 или 0)) ячеек таблицы
for (let i = 0; i < 5; i++)
{
    matrix[i] = [];
    for (let j = 0; j < 5; j++)
    {
        matrix[i][j] = 0;
    }
}



var learningSpeed = 0.0001;//инициализация переменных для нейронки
var numOfWeights = 25;
var inputs = [];
var weights = [];
for (let i = 0; i < 10; i++)
{
    weights[i] = [];
    for (let j = 0; j < numOfWeights; j++)
    {
        weights[i][j] = Math.random();
    }
}
weights[0] = [0.15184052253764047, 0.3130916266929682, 0.31179847433518515, 0.5201693467131672, 0.8665593272990333, 0.8395960566179888, 0.5779464966244168, -0.0832240786034452, 0.4249009950276781, 0.2580419381987633, 0.10607167997897987, 0.7370530720771689, 0.34717579584664593, 0.6697169974555384, 0.17235275893161242, 0.7294895231754539, 0.4420948001326235, 0.2847410439469944, 0.3334947037337397, 0.3315968221853771, 0.8258205648179224, 0.36098747222351624, 0.8344767830579627, 0.36600674896732466, 0.6715386781670651];
weights[1] = [0.043843837873755315, -0.18174430319259072, 0.9782497129548766, 0.21132573762807605, 0.1913731630059051, 0.1351891081905433, 0.42238863226736006, 0.7380639659931281, 0.5355421619295362, 0.2790542925893849, -0.13913845831562513, -0.08969182143155895, 0.5558268829907568, 0.11450668691698244, 0.002404074503004763, -0.061875750431210234, -0.6473868399444846, 0.521243707654435, 0.6480385476354484, 0.07767241748932269, 0.11688648926629303, 0.7216875029198683, 0.5302715114327943, 0.5968432868736624, -0.4073649395056448];
weights[2] = [0.3206280771554988, 0.9435501471476389, 0.30235270672777204, 0.6187127243789092, 0.07472736728542756, 0.3029012400429494, 0.25287133551892627, 0.982617815400834, 0.8874726185403077, 0.715248038770169, 0.2701541753568193, 0.7052700258037019, 0.26569317587418007, 0.6762152084403696, 0.6019074222657175, 0.5058328698405534, 0.574427511760264, 0.5867611415845038, -0.12077813947571976, 0.3206722771752537, 0.5881478364150945, 0.8682250671983536, 0.2124716588723858, 0.33033589405912034, 0.9046642844380084];
weights[3] = [0.13579501846200004, 0.2673422684888511, 0.26700435636043696, 0.21350026752487872, 0.15279834560020375, 0.5256292421704474, 0.22130791722918608, 0.018499483313248133, 0.8762107059782136, 0.3027156581917849, 0.43338799372162473, 0.39302786847612703, 0.7815206699351338, 0.9436323324906655, 0.6147964869140206, 0.12789376765331106, 0.37009402173399275, 0.16825623224050545, 0.24090573706683888, 0.7073252175315237, 0.239323545927276, 0.40031945363524113, 0.492492439268696, 0.7277513119650905, 0.5897140323830656];
weights[4] = [0.2990725048005458, 0.3699228997160815, -0.10022740637081273, 0.4474497339097139, 0.23957394638956697, 0.026500255241911352, 0.7041577755706834, 0.2893239497126161, 0.8610866860649551, 0.8350883738704624, 0.2286013884432676, 0.739934074771766, 0.8924302587283715, 0.7169748508225087, 0.5947421724691535, 0.5822237801517924, 0.6515529186002331, 0.8500071860133127, 0.4801091406113993, 0.19060280198005464, 0.18046793281957063, 0.33346214366919646, 0.009184604098978037, 0.03276657393514527, 0.43258807971412794];
weights[5] = [0.053845562302526906, 0.1622938084979702, 0.712615573937615, 0.6450522207426796, 0.6296572814107979, 0.5511226443717965, 0.2397138896720677, 0.023637747299804102, 0.2022298694845932, 0.4830350764637643, 0.9006042343023832, 0.4546372636603382, 0.9939486492143423, 0.6847176933791734, 0.6147381440929862, 0.29657215524116, 0.561027783124203, 0.06195146161003118, 0.3748808124634946, 0.46615540234815134, 0.3310431428950289, 0.48459707602402236, 0.28569322605499203, 0.4609752201693269, 0.5650527812773414];
weights[6] = [0.645583534715223, 0.7283017198220871, 0.150908569179794, 0.7554697561664725, 0.3428915516431805, 0.7435475386132391, 0.6321560122490879, 0.19528508534459732, 0.025035055438346384, 0.08832834781494016, 0.6526004422053744, 0.41985431434030795, 0.319655043192002, 0.5089146793527628, 0.5220984398883952, 0.3503116763683427, 0.39329296904799294, 0.8686635558422313, 0.7148380096713216, 0.5215663521859526, 0.7992385498898229, 0.34322252155923816, 0.33378965530103444, 0.62204547721764, 0.10806285162864482];
weights[7] = [0.708157852343599, 0.6196485854329541, 0.4532720512463573, 0.8470755220621198, 0.2535768205488642, 0.4548177294600326, 0.07548616719129408, 0.5500797770777719, 0.5884395136983511, 0.45541338848858537, 0.17967150394606657, 0.6193460721511459, 0.13336392414317505, 0.4342236614532966, 0.6214410944243798, 0.3776456285061762, 0.10464691501204859, 0.7288862482177081, 0.43776789900600344, 0.1867238218396543, 0.5315867893630193, 0.22963389572795712, 0.5149524887694348, 0.30904003389770196, 0.8409111276190158];
weights[8] = [0.17659992269555658, 0.6060078227971795, 0.0990812741577673, 0.530486247546285, 0.12023257277356447, 0.32082695289072727, 0.8495371281860045, 0.0589708900907735, 0.44376022256313674, 0.6825534546004302, 0.9367791590093331, 0.7506112454626774, 0.2432201165304364, 0.1244372629316747, 0.22476735782458768, 0.4569810142783981, 1.122565085033236, 0.5229405150400206, 0.6802256022578879, 0.5175089566489959, 0.5098842090234166, 0.38725979899714935, 0.18664832225588857, 0.18012184108149754, 0.2689234482341385];
weights[9] = [0.6853219377840689, 0.07161500246843913, 0.02501923353289515, 0.5692303310804574, 0.145803743670328, 0.8074993408871491, 0.933793253105357, 0.39955137479871783, 0.42649477229458055, 0.9689392305021949, 0.03776595196635801, 0.256109516270568, 0.15249597673471477, 0.5466906563512361, 0.4120944262932307, 0.1261469863256286, 0.38028058458368164, 0.31302032530078483, 0.71631333039002, 0.39616222296562675, 0.9325213465686908, 0.7704250704341196, 0.3923793918438756, 0.7189056991844784, 0.4577631689553161];
function getResult(sums)
{
    let maxInd = 0;
    for (let i = 0; i < 10; i++)
    {
        if (sums[i] > sums[maxInd])
        {
            maxInd = i;
        }
    }
    return maxInd;
}

function getSum(inputs)
{
    let sums = [];
    for (let i = 0; i < 10; i++)
    {
        let sum = 0;
        for (let j = 0; j < numOfWeights; j++)
        {
            sum = sum + inputs[j] * weights[i][j];
        }
        sums[i] = sum;
    }
    return sums;
}

document.addEventListener("click", function(el)//создание возможности перекрашивать ячейки
{
    if (el.target.className == "td")
    {
        if (window.getComputedStyle(el.target).getPropertyValue('background-color') == "rgb(255, 255, 255)")
        {
            el.target.setAttribute('style', 'background-color: rgb(0, 255, 255)');
            matrix[Math.floor(el.target.id/5)][Number(el.target.id)%5] = 1;
        }
        else if (window.getComputedStyle(el.target).getPropertyValue('background-color') == "rgb(0, 255, 255)")
        {
            el.target.setAttribute('style', 'background-color: rgb(255, 255, 255)');
            matrix[Math.floor(el.target.id/5)][Number(el.target.id)%5] = 0;
        }
    }
    else if (el.target.id == "launchNeural")
    {
        for (let i = 0; i < 5; i++)
        {
            for (let j = 0 ; j < 5; j++)
            {
                inputs[i*5+j] = matrix[i][j];
            }
        }
        let res = getResult(getSum(inputs));
        for (let i = 0; i < 500; i++)
        {
            for (let f = 0; f < numOfWeights; f++)//кол-во весов
            {
                if (document.getElementById("expNum").value != res)
                {
                    weights[document.getElementById("expNum").value][f] += learningSpeed * inputs[f];
                    weights[res][f] -= learningSpeed * inputs[f];
                }
                document.getElementById(f).innerHTML = Math.floor(weights[document.getElementById("expNum").value][f]*100)/100;
            }
        }
        console.log(res);
        console.log(getSum(inputs));
        console.log(weights[document.getElementById("expNum").value]);
    }
})